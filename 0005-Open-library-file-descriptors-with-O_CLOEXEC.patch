From d2d29d0b5e42e1a820f6d1777818b2992424c872 Mon Sep 17 00:00:00 2001
From: Thiago Macieira <thiago.macieira@intel.com>
Date: Mon, 10 Sep 2018 21:01:00 -0700
Subject: [PATCH] Open library file descriptors with O_CLOEXEC

This patch is non-portable, it needs linux 2.6.23 and glibc 2.7
or later, different combinations (old linux, new glibc and vice-versa)
will result in a crash.

To make it portable you have to test O_CLOEXEC support at *runtime*
compile time is not enough.

Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>
---
 configure.ac | 2 ++
 lib/file.c   | 4 ++--
 lib/hostip.c | 4 ++--
 lib/if2ip.c  | 2 +-
 4 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/configure.ac b/configure.ac
index a934f903566f..8d88bcd45f6c 100644
--- a/configure.ac
+++ b/configure.ac
@@ -430,6 +430,8 @@ AC_DEFINE_UNQUOTED(OS, "${host}", [cpu-machine-OS])
 # Silence warning: ar: 'u' modifier ignored since 'D' is the default
 AC_SUBST(AR_FLAGS, [cr])
 
+AC_USE_SYSTEM_EXTENSIONS
+
 dnl This defines _ALL_SOURCE for AIX
 CURL_CHECK_AIX_ALL_SOURCE
 
diff --git a/lib/file.c b/lib/file.c
index ffa9fb76d06f..b9a2a864a61a 100644
--- a/lib/file.c
+++ b/lib/file.c
@@ -232,7 +232,7 @@ static CURLcode file_connect(struct Curl_easy *data, bool *done)
     }
   }
   #else
-  fd = open_readonly(real_path, O_RDONLY);
+  fd = open_readonly(real_path, O_RDONLY|O_CLOEXEC);
   file->path = real_path;
   #endif
 #endif
@@ -318,7 +318,7 @@ static CURLcode file_upload(struct Curl_easy *data)
   else
     mode = MODE_DEFAULT|O_TRUNC;
 
-  fd = open(file->path, mode, data->set.new_file_perms);
+  fd = open(file->path, mode | O_CLOEXEC, data->set.new_file_perms);
   if(fd < 0) {
     failf(data, "Can't open %s for writing", file->path);
     return CURLE_WRITE_ERROR;
diff --git a/lib/hostip.c b/lib/hostip.c
index 3cd9a65c50bd..f64b1da5669e 100644
--- a/lib/hostip.c
+++ b/lib/hostip.c
@@ -43,7 +43,7 @@
 
 #include <setjmp.h>
 #include <signal.h>
-
+#include <fcntl.h>
 #include "urldata.h"
 #include "sendf.h"
 #include "hostip.h"
@@ -609,7 +609,7 @@ bool Curl_ipv6works(struct Curl_easy *data)
   else {
     int ipv6_works = -1;
     /* probe to see if we have a working IPv6 stack */
-    curl_socket_t s = socket(PF_INET6, SOCK_DGRAM, 0);
+    curl_socket_t s = socket(PF_INET6, SOCK_DGRAM | SOCK_CLOEXEC, 0);
     if(s == CURL_SOCKET_BAD)
       /* an IPv6 address was requested but we can't get/use one */
       ipv6_works = 0;
diff --git a/lib/if2ip.c b/lib/if2ip.c
index 5249f6cc7eb4..1e4644ea4998 100644
--- a/lib/if2ip.c
+++ b/lib/if2ip.c
@@ -208,7 +208,7 @@ if2ip_result_t Curl_if2ip(int af,
   if(len >= sizeof(req.ifr_name))
     return IF2IP_NOT_FOUND;
 
-  dummy = socket(AF_INET, SOCK_STREAM, 0);
+  dummy = socket(AF_INET, SOCK_STREAM | SOCK_CLOEXEC, 0);
   if(CURL_SOCKET_BAD == dummy)
     return IF2IP_NOT_FOUND;
 
-- 
2.42.0

